#!/bin/sh
# Generate and check module aliases.
# Author: You-Sheng Yang <vicamo.yang@canonical.com>
# Copyright: (C) 2019 Canonical Ltd.

set -eu

run_pkg() {
    pkg="$1"

    echo "I: Testing binary package $pkg"

    if ! dkms_conf=$(dpkg -L $pkg | grep 'dkms.conf$'); then
        echo "I: Package $pkg has no dkms.conf, skipping"
        return
    fi

    if ! modaliases=$(dpkg-query --show -f '${Modaliases}' $pkg); then
        echo "I: Package $pkg has no modaliases, skipping"
        return
    fi

    expected=$(mktemp --suffix=.expected)
    echo "$modaliases" | \
        sed -e 's/\([^(]\+\)(\([^)]\+\))\(, \)\?/\1 \2\n/g' | \
        sed -e '/,/bx' -e 's/\([^ ]\+\) \([^ ]\+\)/alias \2 \1/' -e 'bend' -e ':x' -e 's/\([^ ]\+\) \([^ ]\+\), \(.*\)/alias \2 \1\n\1 \3/' -e 'P;D' -e ':end' | \
        grep -v '^$' | sort > $expected

    name=$(bash -c ". $dkms_conf; echo \$PACKAGE_NAME" 2>/dev/null)
    version=$(bash -c ". $dkms_conf; echo \$PACKAGE_VERSION" 2>/dev/null)
    for build in $(find /var/lib/dkms/$name/$version -mindepth 3 -maxdepth 3 -type d -name module); do
        tmpfile=$(mktemp --suffix=.generated)
        for module in $(find $build -type f -name \*.ko | sort); do
            /sbin/modinfo ${module} | perl -nae "print \"alias \$1 $(basename --suffix=.ko ${module})\\n\" if /^alias:\\s+(.*)\$/";
        done | sort > $tmpfile;
        diff -Nu "$expected" "$tmpfile";
        rm -f $tmpfile
    done

    rm -f $expected
}

for pkg in $(awk '/^Package:/ { print $2 }' debian/control); do
    # package might be arch: restriction or udeb etc.
    if ! apt-cache show $pkg >/dev/null 2>&1; then
        echo "I: Skipping unavailable package $pkg"
        continue
    fi
    run_pkg $pkg
done
