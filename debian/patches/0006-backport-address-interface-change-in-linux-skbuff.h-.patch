From 436871ec96c59dd238d7a603b1e140e90a232b88 Mon Sep 17 00:00:00 2001
From: You-Sheng Yang <vicamo.yang@canonical.com>
Date: Wed, 18 Dec 2019 22:28:08 +0800
Subject: [PATCH] backport: address interface change in linux/skbuff.h since
 5.3.10

Commit 9d0b402125a6 ("net/flow_dissector: switch to siphash") introduces
interface changes for skb_get_hash_perturb() and struct
fq_codel_sched_data. Since this DKMS package carries its own version of
backported definitions of aforementioned data types, it results in
abnormal behavior and in some cases it simply hang the whole system
while connecting to WiFi base stations.

This change synchronizes changed data types while maintaining the
compatibility to previous releases.

Closes: vicamo/backport-iwlwifi-dkms#7
Signed-off-by: You-Sheng Yang <vicamo.yang@canonical.com>
---
 include/net/fq.h      | 9 ++++++++-
 include/net/fq_impl.h | 9 ++++++++-
 2 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/include/net/fq.h b/include/net/fq.h
index f142ee96b..ec04ae9bc 100644
--- a/include/net/fq.h
+++ b/include/net/fq.h
@@ -73,7 +73,14 @@ struct fq {
     LINUX_VERSION_IN_RANGE(4,19,83, 4,20,0) || \
     LINUX_VERSION_IN_RANGE(4,14,153, 4,15,0) || \
     LINUX_VERSION_IN_RANGE(4,9,200, 4,10,0) || \
-    LINUX_VERSION_IN_RANGE(4,4,200, 4,5,0)
+    LINUX_VERSION_IN_RANGE(4,4,200, 4,5,0) || \
+    (UTS_UBUNTU_RELEASE_ABI && \
+     (((LINUX_VERSION_CODE == KERNEL_VERSION(5,0,21)) && \
+       (((UTS_UBUNTU_RELEASE_ABI >= 38) && (UTS_UBUNTU_RELEASE_ABI < 1000)) || \
+        (UTS_UBUNTU_RELEASE_ABI >= 1032))) || \
+      ((LINUX_VERSION_CODE == KERNEL_VERSION(4,15,18)) && \
+       (((UTS_UBUNTU_RELEASE_ABI >= 73) && (UTS_UBUNTU_RELEASE_ABI < 1000)) || \
+        (UTS_UBUNTU_RELEASE_ABI >= 1066)))))
 	siphash_key_t   perturbation;
 #else
 	u32 perturbation;
diff --git a/include/net/fq_impl.h b/include/net/fq_impl.h
index 86d5c56b2..20a1d271b 100644
--- a/include/net/fq_impl.h
+++ b/include/net/fq_impl.h
@@ -112,7 +112,14 @@ static u32 fq_flow_idx(struct fq *fq, struct sk_buff *skb)
     LINUX_VERSION_IN_RANGE(4,19,83, 4,20,0) || \
     LINUX_VERSION_IN_RANGE(4,14,153, 4,15,0) || \
     LINUX_VERSION_IN_RANGE(4,9,200, 4,10,0) || \
-    LINUX_VERSION_IN_RANGE(4,4,200, 4,5,0)
+    LINUX_VERSION_IN_RANGE(4,4,200, 4,5,0) || \
+    (UTS_UBUNTU_RELEASE_ABI && \
+     (((LINUX_VERSION_CODE == KERNEL_VERSION(5,0,21)) && \
+       (((UTS_UBUNTU_RELEASE_ABI >= 38) && (UTS_UBUNTU_RELEASE_ABI < 1000)) || \
+        (UTS_UBUNTU_RELEASE_ABI >= 1032))) || \
+      ((LINUX_VERSION_CODE == KERNEL_VERSION(4,15,18)) && \
+       (((UTS_UBUNTU_RELEASE_ABI >= 73) && (UTS_UBUNTU_RELEASE_ABI < 1000)) || \
+        (UTS_UBUNTU_RELEASE_ABI >= 1066)))))
 	u32 hash = skb_get_hash_perturb(skb, &fq->perturbation);
 #else
 	u32 hash = skb_get_hash_perturb(skb, fq->perturbation);
-- 
2.24.0

